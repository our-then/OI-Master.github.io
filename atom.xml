<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://OI-Master.github.io</id>
    <title>TianyuZhou</title>
    <updated>2020-05-11T12:31:30.908Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://OI-Master.github.io"/>
    <link rel="self" href="https://OI-Master.github.io/atom.xml"/>
    <subtitle>TianyuZhou 小蒟蒻的博客</subtitle>
    <logo>https://OI-Master.github.io/images/avatar.png</logo>
    <icon>https://OI-Master.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, TianyuZhou</rights>
    <entry>
        <title type="html"><![CDATA[我回来了]]></title>
        <id>https://OI-Master.github.io/post/wo-hui-lai-liao/</id>
        <link href="https://OI-Master.github.io/post/wo-hui-lai-liao/">
        </link>
        <updated>2020-05-11T12:20:43.000Z</updated>
        <summary type="html"><![CDATA[<p>RT，终于适应了开学的时候。我回来了，又来写文章了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>RT，终于适应了开学的时候。我回来了，又来写文章了。</p>
<!-- more -->
<p>另外，祝 <a href="https://www.luogu.com.cn/user/114320">connect</a> 大佬生快！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[时钟]]></title>
        <id>https://OI-Master.github.io/post/shi-zhong/</id>
        <link href="https://OI-Master.github.io/post/shi-zhong/">
        </link>
        <updated>2020-04-26T06:39:23.000Z</updated>
        <summary type="html"><![CDATA[<p>如果你也想在自己的博客上加上时钟，你可以使用下面的脚本（语言为 <code>HTML</code>）。</p>
]]></summary>
        <content type="html"><![CDATA[<p>如果你也想在自己的博客上加上时钟，你可以使用下面的脚本（语言为 <code>HTML</code>）。</p>
<!-- more -->
<pre><code class="language-html">&lt;iframe src=&quot;http://free.timeanddate.com/clock/i78bm2g7/n1934/szw110/szh110/hoc000/hbw4/cf100/hgr0/hcw2/fav0/fiv0/mqc000/mqs3/mql25/mqw2/mqd96/mhc000/mhs3/mhl20/mhw2/mhd96/mmc000/mms3/mml5/mmw2/mmd96/hhs2/hhw8/hms2/hmw8/hmr4/hsc000/hss3/hsl90&quot; frameborder=&quot;0&quot; width=&quot;110&quot; height=&quot;110&quot;&gt;&lt;/iframe&gt;
</code></pre>
<p>效果是这样的：</p>
<iframe src="http://free.timeanddate.com/clock/i78bm2g7/n1934/szw110/szh110/hoc000/hbw4/cf100/hgr0/hcw2/fav0/fiv0/mqc000/mqs3/mql25/mqw2/mqd96/mhc000/mhs3/mhl20/mhw2/mhd96/mmc000/mms3/mml5/mmw2/mmd96/hhs2/hhw8/hms2/hmw8/hmr4/hsc000/hss3/hsl90" frameborder="0" width="110" height="110"></iframe><br>
另外，感谢 timeanddate 网站，此时钟是建立在它的网站上的。]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于第二场NOI Online能力测试相关事项的通知]]></title>
        <id>https://OI-Master.github.io/post/guan-yu-di-er-chang-noi-online-neng-li-ce-shi-xiang-guan-shi-xiang-de-tong-zhi/</id>
        <link href="https://OI-Master.github.io/post/guan-yu-di-er-chang-noi-online-neng-li-ce-shi-xiang-guan-shi-xiang-de-tong-zhi/">
        </link>
        <updated>2020-04-24T11:21:40.000Z</updated>
        <summary type="html"><![CDATA[<p>照搬CCF通知。</p>
]]></summary>
        <content type="html"><![CDATA[<p>照搬CCF通知。</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://OI-Master.github.io/post-images/1587781308899.png" alt="通知" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[机器人小T]]></title>
        <id>https://OI-Master.github.io/post/ji-qi-ren-xiao-t/</id>
        <link href="https://OI-Master.github.io/post/ji-qi-ren-xiao-t/">
        </link>
        <updated>2020-04-20T09:06:42.000Z</updated>
        <summary type="html"><![CDATA[<p>欢迎使用我的机器人—— 小T ！他是一个 QQ 机器人，加好友后可以跟它聊天，拉至群里且给它管理员的话可以帮你管理该群。</p>
]]></summary>
        <content type="html"><![CDATA[<p>欢迎使用我的机器人—— 小T ！他是一个 QQ 机器人，加好友后可以跟它聊天，拉至群里且给它管理员的话可以帮你管理该群。</p>
<!-- more -->
<p>加好友的人请加这个 QQ ：3473979630 。临时会话是不会回答的。<br>
如果机器人崩溃或出现问题，请联系我，联系方式为 QQ 。具体链接可以在我的博客主页上找到。<br>
机器人正在重构代码，全新升级中……<br>
这个机器人是2020年4月18日出生的，很小，大家别坑他哦！<br>
好了，就这么多了，不说了不说了，我也要搞文化课了。。。。。。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codeforces Contest 1324 C 题解]]></title>
        <id>https://OI-Master.github.io/post/codeforces-contest-1324-c-ti-jie/</id>
        <link href="https://OI-Master.github.io/post/codeforces-contest-1324-c-ti-jie/">
        </link>
        <updated>2020-04-14T00:28:06.000Z</updated>
        <summary type="html"><![CDATA[<p>这一道题可以说把我的思维弄得乱七八糟，想出来正解后感觉自己实在是太蠢了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>这一道题可以说把我的思维弄得乱七八糟，想出来正解后感觉自己实在是太蠢了。</p>
<!-- more -->
<h2 id="题面">题面</h2>
<h3 id="英文题面">英文题面</h3>
<p>上链接：<a href="https://codeforces.com/contest/1324/problem/C">https://codeforces.com/contest/1324/problem/C</a></p>
<h3 id="中文题面">中文题面</h3>
<p>现在河面上有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">n+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 块石头，编号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">1~n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace nobreak"> </span><span class="mord mathdefault">n</span></span></span></span>块石头每块上有一个方向，如果是 <code>L</code>，那么青蛙到这块石头上之后只能往左跳，如果是 <code>R</code> 只能往右，当然，第 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 块石头的方向是 <code>R</code>。<br>
现在青蛙要从 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 跳到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，请问他应该怎么跳才能让他跳跃过程中跳跃距离最长的最小呢？输出这个距离。</p>
<h2 id="思路">思路</h2>
<p>这道题是贪心的题目。我们发现，往左边跳其实并不划算，我们往左边跳的时候，距离就会更远，我们想跳的只是朝向右边的石头。这时候，这道题就很简单了，直接求出所有向右边的石头的坐标差，取其中最大值即可。</p>
<h2 id="代码">代码</h2>
<pre><code class="language-cpp">/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 * Author: OI_Master
 * Time: 2020-04-15 00:06:42
**/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin&gt;&gt;t;
	while(t--){
		string s;
		cin&gt;&gt;s;
		vector&lt;int&gt;v;
		v.push_back(0);
		for(int i=0;i&lt;s.size();++i)
			if(s[i]=='R')
				v.push_back(i+1);
		v.push_back(s.size()+1);
		int maxv=-1;
		for(int i=1;i&lt;v.size();++i)
			maxv=max(maxv,v[i]-v[i-1]);
		cout&lt;&lt;maxv&lt;&lt;endl;
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codeforces Contest 1335 D 题解]]></title>
        <id>https://OI-Master.github.io/post/codeforces-contest-1335-d-ti-jie/</id>
        <link href="https://OI-Master.github.io/post/codeforces-contest-1335-d-ti-jie/">
        </link>
        <updated>2020-04-13T00:58:10.000Z</updated>
        <summary type="html"><![CDATA[<p>这可以说是我在这场比赛中看到的最简单的题目。</p>
]]></summary>
        <content type="html"><![CDATA[<p>这可以说是我在这场比赛中看到的最简单的题目。</p>
<!-- more -->
<h2 id="题面">题面</h2>
<h3 id="英文题面">英文题面</h3>
<p>请到 <a href="https://codeforces.com/problemset/problem/1335/D">https://codeforces.com/problemset/problem/1335/D</a> 去查看。<s>另外，我告诉你们一个特大消息，我昨天奇迹地上去了主站！</s></p>
<h3 id="中文题面">中文题面</h3>
<p>就是给你一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><mo>×</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">9\times 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span> 的普通数独，九宫格数独，已经填好的，保证合法。如果你不知道数独的规则，可以到 <a href="https://oi-master.github.io/post/yong-c-yu-yan-shi-xian-shu-du/#%E8%A7%84%E5%88%99">这里</a> 查看，也是我写的。<br>
<img src="https://OI-Master.github.io/post-images/1586826661046.png" alt="数独" loading="lazy"><br>
然后我们需要改变最多 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span> 个数，是这个数独变成一个 Anti-Sudoku ，它的意思是，每行每列每宫中至少有两个数相等。<br>
输入一个数独，输出你改的 Anti-Sudoku ，如果有多种解， You can print any。<br>
你需要回答 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 组数据。</p>
<h2 id="思路">思路</h2>
<p>根据我的小研究，我们只需要把所有的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 改成 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 即可。<br>
为什么这样子就可以？因为，这个原来的数独就是一个满足九宫格数独的要求，就是说每行、每列、每宫都没有重复，那么改一下 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，可以保证行至少有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> （原来的一个加上现在新改的一个），每列也会发生重复（原来的一个再加上现在新改的一个），每宫也是一样，所以能保证符合题目 Anti-Sudoku 的要求。</p>
<p>我觉得这种方法最简单，不过 dalao 们改一些特定坐标的方法我也是同意的，不过觉得我这种做法更方便，毕竟思维难度、代码难度都低了嘛。</p>
<h2 id="代码">代码</h2>
<pre><code class="language-cpp">/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 * Author: OI_Master
 * Time: 2020-04-13 15:08:09
**/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin&gt;&gt;t;
	while(t--){
		for(int i=0;i&lt;9;++i){
			for(int j=0;j&lt;9;++j){
				char c;
				cin&gt;&gt;c;
				if(c=='1')
					cout&lt;&lt;2;
				else
					cout&lt;&lt;c;
			}
			cout&lt;&lt;endl;
		}
	}
	return 0;
}
</code></pre>
<p>为什么感觉题目与思路的比例不对？？？</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codeforces 上创建 Mashup 比赛]]></title>
        <id>https://OI-Master.github.io/post/codeforces-shang-chuang-jian-mashup-bi-sai/</id>
        <link href="https://OI-Master.github.io/post/codeforces-shang-chuang-jian-mashup-bi-sai/">
        </link>
        <updated>2020-04-11T05:12:19.000Z</updated>
        <summary type="html"><![CDATA[<p>公开比赛必须要蓝名才能创建哦！Mashup 是私人比赛。</p>
]]></summary>
        <content type="html"><![CDATA[<p>公开比赛必须要蓝名才能创建哦！Mashup 是私人比赛。</p>
<!-- more -->
<h2 id="步骤">步骤</h2>
<p>那，我们就开始了。</p>
<ol>
<li>首先，进入 <a href="https://codeforces.com">Codeforces主站</a> 。由于我上不去所以就用 <a href="https://codeforc.es">https://codeforc.es</a>，步骤一样。<br>
<img src="https://OI-Master.github.io/post-images/1586668670688.png" alt="1" loading="lazy"></li>
<li>接下来，点击GYM。<br>
<img src="https://OI-Master.github.io/post-images/1586668700548.jpg" alt="2" loading="lazy"></li>
<li>然后点击MASHUPS。<br>
<img src="https://OI-Master.github.io/post-images/1586668722184.png" alt="3" loading="lazy"></li>
<li>然后 Create new mashup。<br>
<img src="https://OI-Master.github.io/post-images/1586668743558.png" alt="4" loading="lazy"></li>
<li>输入标题等信息。如果需要将一场比赛完全复制进入 Mashup，可以点击 Clone Contest 。不过如果不要的话就别选（反正我一般不点）。<br>
<img src="https://OI-Master.github.io/post-images/1586668765662.png" alt="5" loading="lazy"></li>
<li>然后可以看到这样子的画面：<br>
<img src="https://OI-Master.github.io/post-images/1586668788666.png" alt="6" loading="lazy"></li>
<li>发公告，回答问题。<br>
<img src="https://OI-Master.github.io/post-images/1586668809866.png" alt="7" loading="lazy"></li>
<li>添加题目，在 PROBLEMSET 里找题目。<br>
<img src="https://OI-Master.github.io/post-images/1586668833146.png" alt="8" loading="lazy"></li>
<li>进入 admin 页面。<br>
<img src="https://OI-Master.github.io/post-images/1586668867850.png" alt="9" loading="lazy"></li>
<li>编辑比赛（由于选项太多我就解释几个，不解释全部了）。<br>
<img src="https://OI-Master.github.io/post-images/1586668937723.png" alt="10A" loading="lazy"><br>
<img src="https://OI-Master.github.io/post-images/1586668957882.png" alt="10B" loading="lazy"><br>
<img src="https://OI-Master.github.io/post-images/1586668966959.png" alt="10C" loading="lazy"></li>
<li>邀请大家，输入用户名或者生成链接。<br>
<img src="https://OI-Master.github.io/post-images/1586668990702.png" alt="11A" loading="lazy"><br>
<img src="https://OI-Master.github.io/post-images/1586669009494.png" alt="11B" loading="lazy"></li>
<li>其他。<br>
<img src="https://OI-Master.github.io/post-images/1586669036269.png" alt="12" loading="lazy"></li>
<li>比赛时当您开启管理模式时，可以查看所有人代码，没有开启的话，CF会将您看待为普通参赛者。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codeforces Contest 1099 C 题解]]></title>
        <id>https://OI-Master.github.io/post/codeforces-contest-1099-c-ti-jie/</id>
        <link href="https://OI-Master.github.io/post/codeforces-contest-1099-c-ti-jie/">
        </link>
        <updated>2020-04-09T12:29:10.000Z</updated>
        <summary type="html"><![CDATA[<p>我又来写题解了！</p>
]]></summary>
        <content type="html"><![CDATA[<p>我又来写题解了！</p>
<!-- more -->
<h2 id="题面">题面</h2>
<h3 id="英文题面">英文题面</h3>
<p>链接在 <a href="https://codeforces.com/contest/1099/problem/C">这里</a> ，自己进去看。</p>
<h3 id="中文题面">中文题面</h3>
<p>翻译如下：</p>
<blockquote>
<p><strong>Description</strong><br>
给定一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的字符串，尽可能包含小写字母，字符 <code>?</code> 和字符 <code>*</code>。保证上面两种特殊字符若出现则一定出现在一个小写字母的后面一位。要求构造一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的新字符串，它和原串有如下关系：</p>
<ul>
<li>按照原串的字母顺序向新串中填充，新串中含且仅含小写字母。</li>
<li>若原串的某小写字母后没有特殊字符，则这个字母在新串中必须保留。</li>
<li>若原串的某小写字母后有字符 <code>?</code>，则这个字母在新串中可以被保留，也可以被删除。</li>
</ul>
<p>若原串某小写字母后有字符 <code>*</code>，则这个字母在新串中可以被保留，可以被删除，也可以被复读很多遍。<br>
<strong>Input</strong><br>
第一行是一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的字符串，保证输入合法；<br>
第二行是一个整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 代表要求构造的新串长度。<br>
<strong>Output</strong><br>
输出一行一个长度为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的字符串，为构造出的串。<br>
若不存在这样的串，输出 <code>Impossible</code>。<br>
<strong>Hint</strong><br>
<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator="true">,</mo><mi>k</mi><mo>≤</mo><mn>200</mn></mrow><annotation encoding="application/x-tex">1\leq n,k\leq 200</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span></span></span></span><br>
translated by <strong>一扶苏一</strong></p>
</blockquote>
<h2 id="思路">思路</h2>
<p>这是一道经典的模拟。<br>
由于宏观简单，我们就看微观了。</p>
<pre><code class="language-cpp">/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 * Author: OI_Master
 * Time: 2020-04-11 03:33:32
**/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
</code></pre>
<p>毫无质量的东西，这些是板子。</p>
<pre><code class="language-cpp">string s;
int k;
cin&gt;&gt;s&gt;&gt;k;
</code></pre>
<p>毫无质量的东西，这些是输入。</p>
<pre><code class="language-cpp">int sum=0;                   
for(int i=0;i&lt;s.size();++i)  
	if(s[i]&gt;='a'&amp;&amp;s[i]&lt;='z') 
		++sum;               
	else if(s[i]=='*'){      
		sum=10000000000000;  
		break;               
	}                        
if(sum&lt;k){                   
	cout&lt;&lt;&quot;Impossible&quot;&lt;&lt;endl;
		return 0;
}
</code></pre>
<p><s>毫无质量的东西，这些是循环。</s><br>
才怪呢，我们发现，只要是字母都把它加上去，如果是 <code>*</code> 就说明能重复无数次。<br>
原来是看最大能到多少。</p>
<pre><code class="language-cpp">sum=0;                   
for(int i=0;i&lt;s.size();++i)
	if(s[i]=='?'||s[i]=='*')
		--sum;
	else
		++sum;
if(sum&gt;k){
	cout&lt;&lt;&quot;Impossible&quot;&lt;&lt;endl;
	return 0;
}
</code></pre>
<p><s>毫无质量的东西，这些也是循环。</s><br>
我们再来看看这是什么用的。<br>
我们发现，当 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 是字母的话，那么 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span></span></span></span> 加 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> ，如果是字符，就让 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault">m</span></span></span></span> 扣掉 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。<br>
发现，我们算的东西就是最少长度是多少，只要一个字母后面有 <code>*</code> 或者是 <code>?</code> 的话，就不算这个字母（删掉）。<br>
最后比较一下。</p>
<pre><code class="language-cpp">vector&lt;char&gt;ans;
for(int i=1;i&lt;s.size();++i)
	if(s[i]&gt;='a'&amp;&amp;s[i]&lt;='z'&amp;&amp;s[i-1]&gt;='a'&amp;&amp;s[i-1]&lt;='z')
		ans.push_back(s[i-1]);
	else if(s[i]=='?'&amp;&amp;sum&lt;k){
		++sum;
		ans.push_back(s[i-1]);
	}
	else if(s[i]=='*'&amp;&amp;sum&lt;k)
		while(sum&lt;k){
			++sum;
			ans.push_back(s[i-1]);
		}
</code></pre>
<p>核心部分啦！<br>
如果这个字符是字母，不是符号，前面一个也不是符号，那么就说明前面一个必须要选，进 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> 里面。<br>
否则，如果是问号的话，并且串长不够，那么就把字母压到 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">ans</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">s</span></span></span></span> 里。<br>
如果是 <code>*</code> 的话，那么可以把串长补到够，一直加，没有副作用。<br>
这一段我故意写得稍微有些简洁，想让大家再看几下代码，好好理解。</p>
<pre><code class="language-cpp">    if(s[s.size()-1]&gt;='a'&amp;&amp;s[s.size()-1]&lt;='z')
		ans.push_back(s[s.size()-1]);
	for(int i=0;i&lt;ans.size();++i)
		cout&lt;&lt;ans[i];
    return 0;
}
</code></pre>
<p>这一段好像的确没什么难的了，就是打印。</p>
<h2 id="代码">代码</h2>
<p>完整代码如下：</p>
<pre><code class="language-cpp">/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 * Author: OI_Master
 * Time: 2020-04-11 03:33:32
**/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	string s;
	int k;
	cin&gt;&gt;s&gt;&gt;k;
	int sum=0;
	for(int i=0;i&lt;s.size();++i)
		if(s[i]&gt;='a'&amp;&amp;s[i]&lt;='z')
			++sum;
		else if(s[i]=='*'){
			sum=10000000000000;
			break;
		}
	if(sum&lt;k){
		cout&lt;&lt;&quot;Impossible&quot;&lt;&lt;endl;
		return 0;
	}
	sum=0;
	for(int i=0;i&lt;s.size();++i)
		if(s[i]=='?'||s[i]=='*')
			--sum;
		else
			++sum;
	if(sum&gt;k){
		cout&lt;&lt;&quot;Impossible&quot;&lt;&lt;endl;
		return 0;
	}
	vector&lt;char&gt;ans;
	for(int i=1;i&lt;s.size();++i)
		if(s[i]&gt;='a'&amp;&amp;s[i]&lt;='z'&amp;&amp;s[i-1]&gt;='a'&amp;&amp;s[i-1]&lt;='z')
			ans.push_back(s[i-1]);
		else if(s[i]=='?'&amp;&amp;sum&lt;k){
			++sum;
			ans.push_back(s[i-1]);
		}
		else if(s[i]=='*'&amp;&amp;sum&lt;k)
			while(sum&lt;k){
				++sum;
				ans.push_back(s[i-1]);
			}
	if(s[s.size()-1]&gt;='a'&amp;&amp;s[s.size()-1]&lt;='z')
		ans.push_back(s[s.size()-1]);
	for(int i=0;i&lt;ans.size();++i)
		cout&lt;&lt;ans[i];
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codeforces Contest 1134 C 题解]]></title>
        <id>https://OI-Master.github.io/post/codeforces-contest-1134-c-ti-jie/</id>
        <link href="https://OI-Master.github.io/post/codeforces-contest-1134-c-ti-jie/">
        </link>
        <updated>2020-04-09T07:05:06.000Z</updated>
        <summary type="html"><![CDATA[<p>这一道题我昨天晚上做了很久，不过最后居然 AC 了。貌似大家都没有 AC 呀，我写一篇题解吧。</p>
]]></summary>
        <content type="html"><![CDATA[<p>这一道题我昨天晚上做了很久，不过最后居然 AC 了。貌似大家都没有 AC 呀，我写一篇题解吧。</p>
<!-- more -->
<h2 id="题面">题面</h2>
<h3 id="英文题面">英文题面</h3>
<p>为什么要给呢，直接去 <a href="https://codeforces.com/contest/1334/problem/C">这里</a> 就好了啊。</p>
<h3 id="中文题面">中文题面</h3>
<p>有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 头凶猛的怪兽，他们围成一个圈圈，顺时针编号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">1, 2, 3, 4, \dots , N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 每一头怪兽都有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 个属性——一个是它的生命值，第二个是它的爆炸值。爆炸会发生在它生命值小于等于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，就是说他死掉的时候，它的下一头怪兽会遭到 它的爆炸值 点伤害。如果下一头怪兽已经死了，则无伤害。如果这回又把下一头怪兽给弄死了，那么下一头怪兽也会爆炸，连环炸到下下头怪兽……你还有一把枪，每发子弹可以伤害一头怪兽的生命值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 点。问你，把怪兽都炸掉，要用多少子弹。</p>
<h2 id="思路">思路</h2>
<p>我们知道，打掉怪兽有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 种可能。第一种，就是专门拿枪一发一发地打它，一种是先打 这个怪兽的生命值-上个怪兽的爆炸值 发，也就是说，最后让上一个怪兽把它爆掉。我们发现，不管怎么打， “这个怪兽的生命值-上个怪兽的爆炸值 发”肯定是要的，于是我们先打这么多发。<br>
这时候，又出现了一个情况。我们发现，在怪兽中间，出现了一个“环”，只要有一个怪兽死了，大家都会被连环炸掉。所以，我们只需要打死现在生命值最小的怪兽即可。</p>
<h2 id="代码">代码</h2>
<p>别抄袭啊！</p>
<pre><code class="language-cpp">/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool
 * Author: OI_Master
 * Time: 2020-04-10 15:45:27
**/
#include&lt;bits/stdc++.h&gt;
using namespace std;
#define int long long
struct node{
	int h;
	int b;
	int c;
};
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	int t;
	cin&gt;&gt;t;
	while(t--){
		int n;
		cin&gt;&gt;n;
		node a[n];
		for(int i=0;i&lt;n;++i)
			cin&gt;&gt;a[i].h&gt;&gt;a[i].b;
		if(n==1){
			cout&lt;&lt;a[0].h&lt;&lt;endl;
			continue;
		}
		a[0].c=a[0].h-a[n-1].b;
		for(int i=1;i&lt;n;++i)
			a[i].c=a[i].h-a[i-1].b;
		int sum=0;
		for(int i=0;i&lt;n;++i)
			if(a[i].c&gt;0){
				sum+=a[i].c;
				a[i].h-=a[i].c;
			}
		int minv=1000000000000;
		for(int i=0;i&lt;n;++i)
			minv=min(minv,a[i].h);
		cout&lt;&lt;sum+minv&lt;&lt;endl;
	}
	return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[算法脑图]]></title>
        <id>https://OI-Master.github.io/post/suan-fa-nao-tu/</id>
        <link href="https://OI-Master.github.io/post/suan-fa-nao-tu/">
        </link>
        <updated>2020-04-06T18:12:28.000Z</updated>
        <summary type="html"><![CDATA[<p>图片来源于网络，侵权删。</p>
]]></summary>
        <content type="html"><![CDATA[<p>图片来源于网络，侵权删。</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://OI-Master.github.io/post-images/1586225603861.png" alt="脑图" loading="lazy"></figure>
]]></content>
    </entry>
</feed>